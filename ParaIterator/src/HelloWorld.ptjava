
	import pi.*;
import pt.runtime.TaskIDGroup;

import java.util.Collection;
import java.util.List;
	
public class HelloWorld {
	
	private void notifyFunc() {
		System.out.println("in notifyFunc");
	}
	
	public static void main(String[] args) {
		List<String> list = new ArrayList<String>();
		for (Integer j = 1; j <= 50; j++){
			list.add(j.toString());
		}
		System.out.println("Created list");
		Collection<String> elements = list;
		
		int numOfTasks = 5;
		
		ParIterator<String> pi = TaskAwareParIteratorFactory.createParIterator(elements, 4, numOfTasks,ParIterator.Schedule.TASKAWARE, 3);
		
		TaskIDGroup g = new TaskIDGroup(numOfTasks);
		
		for(int i=0; i<numOfTasks; i++){
			TaskID id = parataskTest(pi, i);
			g.add(id);
		}
		pi.notifyAll();
		
		
		System.out.println("Like"+ g.groupSize());
		System.out.println("Worked");
		
	}

	private static void hello(String name) {
		System.out.println("Hello from " + name);
	}
	
	TASK public static void parataskTest(ParIterator<String> pi, int i) {

		pi.localBreak();
		System.out.println("start of task "+i);
		while (pi.hasNext()) {
			String elementString = pi.next();
			System.out.println("task "+i+" is es " +elementString);
		}
		System.out.println("end of task "+i);
	}
	
	TASK private static void oneoff_hello() {
		hello("One-off Task");
	}
	
	TASK private void oneoff_hello2(){
		System.out.println("Hello from oneoff_hello2");
	}
	
	TASK(8) private static void multi_hello() {
		hello("Multi-Task [subtask "+CurrentTask.relativeID()+"]  [thread "+CurrentTask.currentThreadID()+"]  [globalID "+CurrentTask.globalID()+"]  [mulTaskSize "+CurrentTask.multiTaskSize()+"]  [TaskID "+CurrentTask.currentTaskID()+"]  [ISinside? "+CurrentTask.insideTask()+"]  [progress "+CurrentTask.getProgress()+"]");
	}
	
	IO_TASK public static void interactive_hello() {
		hello("Interactive Task");
	}
}
